<?php

// $Id: simple_fbwall.module,v 1.1 2011/01/24 14:48:32 FilmKnurd Exp $

/******************************************************
 * API
 ******************************************************/

/**
 * FaceBook Wall Post Form
 *
 * The payload consists of an array, where the keys
 * correspond to options of the Facebook Post object
 * (http://developers.facebook.com/docs/reference/api/post/ see the
 * 'Publishing' section on that Facebook API page).
 *
 * For example:
 * $example_payload = array(
 *   'message' => 'Hello World!',
 *   'picture' => 'http://www.example.com/example.jpg',
 *   'actions' => array(
 *     array(
 *       'name' => 'Visit Example.com',
 *       'link' => 'http://www.example.com/',
 *     ),
 *   'link' => array(
 *     'link' => 'http://www.example.com/example_page',
 *     'name' => 'Example Page',
 *     'caption' => 'This is the example page',
 *     'description' => 'The example page has a lot of stuff on it that is used for examples.',
 *   ),
 * );
 * 
 * 
 * @param type $form_state
 * @param type $form_id
 * @param array $payload
 * @return form
 */
function simple_fbwall_post_button_form($form_state, $form_id, $payload) {
  $form['#attributes'] = array(
    'class' => 'simple_fbwall_button_form',
  );
  
  $form['submit'] = array(
    '#attributes' => array(
      'class' => 'simple_fbwall_button',
    ),
    '#type' => 'submit',
    '#value' => t('Share'),
  );
  
  if (isset($payload[0])) {
    $payload = $payload[0]; // Remove the 0 element if the payload has been mangled by Drupal's template preprocessor
  }
  
  foreach ($payload as $key => $item) {
    
    switch ($key) {
      case 'message':
        $form['message'] = array(
          '#type' => 'hidden',
          '#value' => $item,
        );
        break;
      case 'picture':
        $form['picture'] = array(
          '#type' => 'hidden',
          '#value' => $item,
        );
        break;
      case 'link':
        foreach ($item as $k => $v) {
          $form[$k] = array(
            '#type' => 'hidden',
            '#value' => $v,
          );
        }
        break;
      case 'source':
        $form['source'] = array(
          '#type' => 'hidden',
          '#value' => $item,
        );
        break;
      case 'actions':
        $i = 0; // For now, this value will never increment as FB only accepts 1 action.
        foreach( $item as $k => $v )
        {
          $form['action['.$i.']'] = array(
            '#type' => 'hidden',
            '#value' => $v['name'].'|'.$v['link'],
          );
        }
        break;
    }
  }
  
  return $form;
}


/******************************************************
 * ADMINISTRATION
 ******************************************************/

/**
 * Implementation of hook_init() 
 */
function simple_fbwall_init() {
  // Add Javascript files & settings
  $simple_fbwall_settings = array();
  $simple_fbwall_settings['simple_fbwall']['appid'] = variable_get('simple_fbwall_id', '');
  $simple_fbwall_settings['simple_fbwall']['login_msg'] = variable_get('simple_fbwall_login_messag',
            t('Click the login button below to login to FaceBook and authorize wall posts from this site.'));
  $simple_fbwall_settings['simple_fbwall']['success_msg'] = variable_get('simple_fbwall_success_message',
            t('You successfully posted to your wall!'));
  $simple_fbwall_settings['simple_fbwall']['module_path'] = drupal_get_path('module', 'simple_fbwall') . '/';
  drupal_add_js($simple_fbwall_settings, 'setting');

  drupal_add_js('sites/all/libraries/boxy-0.1.4/src/javascripts/jquery.boxy.js');
  drupal_add_js(drupal_get_path('module', 'simple_fbwall') . '/simple_fbwall.js');

  // Add CSS files
  drupal_add_css( 'sites/all/libraries/boxy-0.1.4/src/stylesheets/boxy.css' );
  drupal_add_css(drupal_get_path('module', 'simple_fbwall') . '/simple_fbwall.css');
}

/**
 * Implementation of hook_menu() 
 */
function simple_fbwall_menu() {
  $items['admin/settings/simple_fbwall'] = array(
    'title' => t('Simple FB Wall'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('simple_fbwall_settings'),
    'access callback' => 'user_access',
    'access arguments' => array('Configure App'),
  );
  
  return $items;
}

/**
 * Implementation of hook_perm() 
 */
function simple_fbwall_perm() {
  return array('Configure App');
}

/**
 * Configuration settings 
 */
function simple_fbwall_settings() {
  $form['simple_fbwall_id'] = array(
    '#type' => 'textfield',
    '#title' => t('Application ID'),
    '#description' => t('Your Application ID (generated by FaceBook when you created your application).'),
    '#required' => TRUE,
    '#default_value' => variable_get('simple_fbwall_id', ''),
  );
  
  $form['simple_fbwall_login_message'] = array(
    '#type' => 'textarea',
    '#title' => t('Login prompt'),
    '#description' => t('Message to display when a user is not yet logged into FaceBook'),
    '#required' => FALSE,
    '#default_value' => variable_get('simple_fbwall_login_message', 
            t('Click the login button below to login to FaceBook and authorize wall posts from this site.')),
  );
  
  $form['simple_fbwall_success_message'] = array(
    '#type' => 'textarea',
    '#title' => t('Success Message'),
    '#description' => t('Message to display when a wall post is successful'),
    '#required' => FALSE,
    '#default_value' => variable_get('simple_fbwall_success_message', 
            t('You successfully posted to your wall!')),
  );
  
  return system_settings_form($form);
}

/**
 * Implementation of hook_forms() 
 * 
 * Allows for multiple facebook forms on the same page.
 */
function simple_fbwall_forms($form_id, $args) {
  if (strpos($form_id, 'simple_fbwall_post_button_form') !== FALSE) {
      $forms[$form_id] = array(
        'callback' => 'simple_fbwall_post_button_form',
        'callback arguments' => array($form_id, $args),
        );
      return $forms;
   }
}
